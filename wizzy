#!/usr/bin/env python

import yaml,sys,glob,os,shutil,errno,subprocess
from random import choice
from clint.textui import colored

command_names = ['list', 'add', 'check','install','fix','rinstall','rfix', 'doctor', 'remove','track','untrack','help']

def isACommand(command):
 return command in command_names

def configurationFile():
	try:
		stream = open("wizzy_config.yml", 'r')
		configuration_file = yaml.load(stream)
		return configuration_file
	except IOError:
		wizzyCastAndSpeakError("File wizzy_config.yml", "  not found! Please fix this!")
		exit(0)

def randomMagicWord():
	words = [
		"Aajaye",
		"Abracadabra",
		"Alla Peanut Butter Sandwiches",
		"Alakazam",
		"Cei",
		"Hocus pocus",
		"Joshikazam",
		"Klaatu barada nikto",
		"Meeska, Mooska, Mickey Mouse",
		"Open sesame",
		"Hey Presto",
		"Sim Sala Bim",
		"Shazam",
		"Izzy wizzy",
		"Wella Walla Washington",
		"Mecca lecca hi, mecca hiney ho"]
	return choice(words)

def wizzySpeak(phrase, action=""):
	print colored.blue("Wizzy: ") + colored.cyan(action)+ colored.yellow(phrase) + colored.cyan(" ...")
def wizzyCast():
	print colored.blue(" *^~.. ") + colored.green(randomMagicWord()+"!") + colored.blue(" ..~^* ")
def wizzyCastAndSpeak(phrase):
	print colored.blue("Wizzy: ") + colored.blue(" *^~.. ") + colored.green(randomMagicWord()+"!") + colored.blue(" ..~^* ") + colored.yellow(phrase)
def wizzyCastAndSpeakError(element, phrase):
	print colored.red("Wizzy: ") + colored.blue(" *^~.. ") + colored.green(randomMagicWord()+"!") + colored.blue(" ..~^* ") + colored.red(element) + colored.yellow(phrase)

# ---------------------------------------------------
# Configuration file actions 

def check():
	wizzySpeak("Let me see.. i should have a check spell somewhere...")
	wizzyCast()
	wizzySpeak("Checking files inside wizzy_config.yml")
	errors = 0
	for element in configurationFile()['files']:
		if  not glob.glob(os.path.abspath(element)):
			errors += 1
			wizzyCastAndSpeakError(element, " not valid. Please use valid file name")
	if errors > 0 :
		if errors == 1:
			wizzySpeak("You have "+str(errors) +" error. Please run wizzy doctor to fix it")
		else:
			wizzySpeak("You have "+str(errors) +" errors. Please run wizzy doctor to fix them")
	else:
		wizzySpeak("Ok! It should be all ok ...")

def doctor():
	wizzySpeak("Checking files inside wizzy_config.yml")
	for element in configurationFile()['files']:
		if  not glob.glob(os.path.abspath(element)):
			remove(element)

def list():
	wizzySpeak("Coff Coff.. too much dust!")
	for element in configurationFile()['files']:
		if  not glob.glob(os.path.abspath(element)):
			#The file(s) are in the wizzy_config but not on the os !
			wizzyCastAndSpeakError(element, " does not exist. Check your wizzy_config file")
		for file in glob.glob(os.path.abspath(element)):
			print colored.green(file)

def add(file):
	if glob.glob(os.path.abspath(file)):
		array = configurationFile()['files']
		# TODO: Check for duplicates
		array.append(file)
		configurationFile()['files'].update({'files': array})
		stream = open("wizzy_config.yml",'w')
		yaml.dump(configurationFile()['files'],stream)
		wizzySpeak("File " + file + " added to wizzy_config.yml")
	else:
		wizzyCastAndSpeakError(file, " does not making any sense. Please insert a valid file name or regex!")

def remove(file):
		array = configurationFile()['files']
		try:
			array.remove(file)
			configurationFile()['files'].update({'files': array})
			stream = open("wizzy_config.yml",'w')
			yaml.dump(configurationFile()['files'],stream)
			wizzySpeak("File " + file + " removed from wizzy_config.yml")
		except ValueError,e :
			wizzyCastAndSpeakError(file, " was not in the config file. I cannot remove what does not exist")

# ---------------------------------------------------


# ---------------------------------------------------
# Basic operations

def help():
	span = 10
	print colored.cyan("usage: wizzy <spell>")
	print colored.yellow("Shhhh! Here you can find the list of the spells :")
	print colored.red(command_names[0].ljust(span)) + colored.green("List all the files specified into the wizzy-config")
	print colored.red(command_names[1].ljust(span)) + colored.green("Add a file to the wizzy-config")
	print colored.red(command_names[2].ljust(span)) + colored.green("Check if wizzy-config contains errors")
	print colored.red(command_names[3].ljust(span)) + colored.green("Install wizzy and caches all files specified in the wizzy-config")
	print colored.red(command_names[4].ljust(span)) + colored.green("Restores the cached files .. like .. magic ! ")
	print colored.red(command_names[5].ljust(span)) + colored.green("Fix the wizzy-config removing invalid files")
	print colored.red(command_names[6].ljust(span)) + colored.green("Remove a file from the wizzy-config")
	print colored.red(command_names[7].ljust(span)) + colored.green("Set all the files in a assume-unchanged state")
	print colored.red(command_names[8].ljust(span)) + colored.green("Set all the files in a no-assume-unchanged state")
	print colored.red(command_names[9].ljust(span)) + colored.green("Well.. that's me!")

def install():
	wizzySpeak("Creating magic directory")
	# Create wizzy cache directory
	try:
	    os.makedirs(configurationFile()['wizzy_cache_directory'])
	except OSError, e:
			if e.errno == errno.EEXIST:
					wizzyCastAndSpeakError(configurationFile()['wizzy_cache_directory'], " directory was already created. Let's skip this ok?")
			else:
					# If is not an already exists error
					raise
 # Fill wizzy dir with files specified in .wizzy-config
	for element in configurationFile()['files']:
		if  not glob.glob(os.path.abspath(element)):
			#The file(s) are in the .wizzy-config but not on the os !
			wizzyCastAndSpeakError(element, " disappeared! Oh snap! Can you please run wizzy check to understand what is missing?")
		for file in glob.glob(os.path.abspath(element)):
			wizzySpeak(file,"Cached ")
			shutil.copy2(file, os.path.abspath(configurationFile()['wizzy_cache_directory']))

def rinstall():
	if configurationFile()['wizzy_remote']:

	 # local install
		install()
		if configurationFile()['wizzy_remote_repo']:
			try:
			   os.makedirs(configurationFile()['wizzy_remote_folder_name'])
			except OSError, e:
				if e.errno == errno.EEXIST:
						wizzyCastAndSpeakError(configurationFile()['wizzy_remote_folder_name'], " directory was already created. Let's skip this ok?")
				else:
					execute_process("git submodule add "+configurationFile()['wizzy_remote_repo']+" ; cp -r .wizzy/ .wizzy_remote/"+configurationFile()['wizzy_remote_folder_name']+" ; rm -rf .wizzy/ ; ln -s .wizzy_remote/"+configurationFile()['wizzy_remote_folder_name']+" .wizzy")
					# adding/sync new files to remote repo
				execute_process( "cd .wizzy_remote/"+configurationFile()['wizzy_remote_folder_name']+" ; "+ "! git add * ; ! git commit -m 'Sync .wizzy files' ;"+ "! git push origin master" )
			wizzySpeak("All done!")
		else:
			wizzyCastAndSpeak("If you wish to use remote features you need to enable them in the wizzy_config.yml")

def isModified(f):
	if not os.path.exists(os.path.abspath(f)) :
		# file removed?
		return True
	if os.stat(f).st_mtime == os.stat(os.path.abspath(configurationFile()['wizzy_cache_directory'])+"/"+os.path.basename(f)).st_mtime :
		return False
	else :
		return True

def fix():
	if not glob.glob(os.path.abspath(configurationFile()['wizzy_cache_directory'])):
		wizzyCastAndSpeakError(configurationFile()['wizzy_cache_directory'], " directory not found. Have you tried to wizzy install first?")
	else:
		for element in  configurationFile()['files']:
			for file in glob.glob(os.path.abspath(element)):
				# if the file is modified since last magic, copy the cached version
				if isModified(file) :
					if os.path.exists(file):
						# Override file
						os.remove(file)
					shutil.copy2(configurationFile()['wizzy_cache_directory']+"/"+os.path.basename(file), os.path.dirname(file))
					wizzyCast()
					wizzySpeak(file,"Restored ")
				else :
					wizzySpeak(file,"No magic needed for file: ")

def rfix():
	if configurationFile()['wizzy_remote']:
		# normal administration
		execute_process("! git clone "+configurationFile()['wizzy_remote_repo'])
		execute_process("mkdir .wizzy_remote/"+configurationFile()['wizzy_remote_folder_name'])

		execute_process( "cd .wizzy_remote/ ; "+ "git pull origin master ; "+" cp -r * ../.wizzy/" )
		# local fix
		fix()
		wizzySpeak("All done!")
	else:
		wizzyCastAndSpeak("If you wish to use remote features you need to enable them in the wizzy_config.yml")


# ---------------------------------------------------

# ---------------------------------------------------
# Git related operations

def execute_process(command):
	child = subprocess.Popen(command, shell=True, stderr=subprocess.PIPE)
	while True:
		out = child.stderr.read(1)
		if out == '' and child.poll() != None:
			break
		if out != '':
			sys.stdout.write(out)
			sys.stdout.flush()


def untrack():
	for element in configurationFile()['files']:
		for file in glob.glob(os.path.abspath(element)):
			execute_process('git update-index --assume-unchanged ' + file)
			# print getInfoMessage("	"+file+"? ")+ getMagicMessage("Oh snap! My alzheimer!" )
			wizzyCastAndSpeak(file+" ? Oh snap! My alzheimer!")

def track():
	for element in configurationFile()['files']:
		for file in glob.glob(os.path.abspath(element)):
			execute_process('git update-index --no-assume-unchanged ' + file)
			wizzyCastAndSpeak(file+" ? Oh now i remember!")

# ---------------------------------------------------


def exec_arg(argv):
	if len(argv) == 2:
		# check if the command is supported
		if not argv[1] in command_names:
			# not supported
			wizzyCastAndSpeakError(argv, " wrong spell! What are you trying to say? Plase type wizzy help")
		else:
			# calling the command
			# print argv
			globals()[argv[1]]()
	elif len(argv) == 3 :
		if not isACommand(argv[1]):
				wizzyCastAndSpeakError(argv, " wrong spell! What are you trying to say? Plase type wizzy help")
		else:
			globals()[argv[1]](argv[2])
	else:
		# wrong arguments man
		wizzyCastAndSpeakError(argv, " wrong arguments! What are you trying to say? Plase type wizzy help")

exec_arg(sys.argv)

